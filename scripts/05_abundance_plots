# 05_abundance_plots
# Creating abundace plots based on the top dsm model
# following our aims we are using the spatial only model fisrt 

# Load in required librarys
library(ggplot2)
library(ggrepel)
library(ggspatial)
library(shadowtext) 

# Load in projection grid
load("4.proj_grid.Rdata")


p  <- "+proj=laea +lat_0=-90 +lon_0=-57 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs"
p <- st_crs(p)

crs_laea <- st_crs("+proj=laea +lat_0=-90 +lon_0=-57 +datum=WGS84")

# Make sure grid is sf and in the right CRS
grid <- st_as_sf(grid)
grid <- st_transform(grid, crs = crs_laea) %>%
  st_transform(4326) %>%
  mutate(lon= st_coordinates(geometry)[,1], lat= st_coordinates(geometry)[,2])

# Create grid.poly
grid.poly <- grid %>%
  st_drop_geometry() %>%
  bind_cols(geometry = grid$poly) %>%
  st_as_sf()

# Add in bathymetry
bathy <- marmap::getNOAA.bathy(lon1 = -60, lon2 = -65,
                               lat1 = -64, lat2 = -65.5,
                               resolution = 1)
coast <- marmap::as.SpatialGridDataFrame(bathy) |> 
  stars::st_as_stars() |> 
  stars::st_contour(breaks = c(0), contour_lines = FALSE) |> 
  st_transform(crs_laea)

# Creating place names for my study area
places <- data.frame(
  name = c("Wilhelmina Bay", "Charlotte Bay", "Paradise Bay", 
           "Lemaire Channel", "Anvers Island", "Brabant Island", 
           "Andvord Bay", "Hughes Bay", "Flandres Bay"),
  lon = c(-62.0, -61.52, -62.8, -63.6, -63.5, -62.4, -62.25, -60.87, -62.7),  
  lat = c(-64.8, -64.7, -64.97, -65.2, -64.5, -64.2, -64.93, -64.4, -65.16)   
)

places_sf <- st_as_sf(places, coords = c("lon", "lat"), crs = 4326)
places_sf <- st_transform(places_sf, st_crs(grid.poly))
places_sf <- cbind(places_sf, st_coordinates(places_sf))


# Plotting base models
base_preds <- predict(dsm.xy.tw,
                      newdata = grid,
                      off.set = grid$area,
                      type = "response",
                      se.fit = TRUE)

# Add to polygons
grid.poly$predicted_base <- as.numeric(base_preds$fit)
grid.poly$se_base <- as.numeric(base_preds$se.fit)

# Making sure the geometry is correct format 

segs1 <- segs_f %>% st_drop_geometry() %>% 
  st_as_sf(coords=c("LonM","LatM"), remove =F, crs= 4326) %>% 
  st_transform(st_crs(grid))

obs1 <- obs_f %>% st_as_sf(coords=c("lon","lat"), remove =F, crs= 4326) %>% 
  st_transform(st_crs(grid))

grid.poly$area_km2 <- as.numeric(st_area(grid.poly)) / 1e6 # this is to make plot show whales/km2

ggplot() +
  geom_sf(data = grid.poly 
          , aes(fill = predicted_base), color = NA) +
  geom_sf(data = coast %>% st_transform(4326), color = "black", fill = NA) +
  geom_sf(data = segs_1 , color = "black", size = 0.5) +
  geom_sf(data = obs_1, pch = 21, bg = "cyan", col = "black", size = 1.8) +
  coord_sf(crs = crs_laea) +
  scale_fill_viridis_c(name = "Predicted density (whales/km²)", option = "plasma") +
  labs(title = "Predicted Abundance from Spatial DSM",
       subtitle = "Model: Tweedie + s(x,y)",
       fill = "Abundance") +
  geom_shadowtext(
    data = places_sf,
    aes(x = X, y = Y, label = name),
    color = "darkblue",
    bg.color = "white",      
    bg.r = 0.1,             
    fontface = "bold",
    size = 3
  )+
  theme_minimal()


# ============================
#  Adding in Month as a factor
# ============================

month_levels <- c("1" = "Nov", "2" = "Dec", "3" = "Jan", "4" = "Feb", "5" = "Mar")

for (m in month_levels) {
  grid$month.x <- factor(m, levels = month_levels)
  
  pred <- predict(dsm.xy.fmonth.tw, newdata = grid, off.set = grid$area, 
                  type = "response", se.fit = FALSE)
  
  grid.poly[, paste0("month", m)] <- as.vector(pred) / (grid$area / 1e6)
}

# Creating observations to match each month we are plotting 
# First, we need to join obs_f with segs_f to get the month information
obs_with_month <- obs_f %>%
  left_join(segs_f %>% select(Sample.Label, month.x), by = "Sample.Label")


obs_long <- obs_with_month %>%
  filter(!is.na(month.x)) %>%
  st_as_sf(coords=c("lon","lat"), remove =F, crs= 4326) %>% 
  st_transform(st_crs(grid)) %>%
  mutate(month = case_when(
    month.x == "1" ~ "Nov",
    month.x == "2" ~ "Dec", 
    month.x == "3" ~ "Jan",
    month.x == "4" ~ "Feb",
    month.x == "5" ~ "Mar"
  )) %>%
  mutate(month = factor(month, levels = c("Nov", "Dec", "Jan", "Feb", "Mar")))


# Define month labels for plotting
month_labels <- c("1" = "Nov", "2" = "Dec", "3" = "Jan", "4" = "Feb", "5" = "Mar")

grid.poly %>% dplyr::select(month1:month5) %>% 
  pivot_longer(cols = month1:month5,
               names_to = "month",
               values_to = "pred") %>% 
  mutate(month = gsub("month", "", month),
         month = factor(month, 
                        levels = c("1","2","3","4","5"),
                        labels = month_labels)) %>% 
  ggplot() +
  geom_sf( aes(fill =  pred ), color = NA) +
  geom_sf(data = coast, color = "black", fill = NA) +
  geom_sf(data = obs_long, pch = 21, bg = "cyan", col = "black", size = 1.8) +
  coord_sf(crs = crs_laea) +
  scale_fill_viridis_c(name = "Density (whales/km²)", option = "plasma") +
  labs(title = paste("Predicted Density by Month")) +
  theme_minimal()+
  facet_wrap(~month)

# After looking at these plots we can see the spatial hotposts and densties
